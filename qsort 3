   fout<<"Quicksort cu mediana din 3:\n";

    fout<<"n=1000 max=1000\n";
    for(int i=0; i<test1.size(); i++){
        f1>>test1[i];
    }
    start = chrono::high_resolution_clock::now();
    quick_sort_3way(test1,0,test1.size()-1);
    stop = chrono::high_resolution_clock::now();
    time = stop - start;
    if(test_sort(test1)){
        fout<<time.count()<<"s\n";
    }
    else fout<<"failed sort\n";

    fout<<"n=1000000 max=1000000\n";
    for(int i=0; i<test2.size(); i++){
        f2>>test2[i];
    }
    start = chrono::high_resolution_clock::now();
    quick_sort_3way(test2,0,test2.size()-1);
    stop = chrono::high_resolution_clock::now();
    time = stop - start;
    if(test_sort(test2)){
        fout<<time.count()<<"s\n";
    }
    else fout<<"failed sort\n";

    fout<<"n=100000000 max=1000\n";
    for(int i=0; i<test3.size(); i++){
        f3>>test3[i];
    }
    start = chrono::high_resolution_clock::now();
    quick_sort_3way(test3,0,test3.size()-1);
    stop = chrono::high_resolution_clock::now();
    time = stop - start;
    if(test_sort(test3)){
        fout<<time.count()<<"s\n";
    }
    else fout<<"failed sort\n";

    fout<<"n=100000000 max=1000000\n";
    for(int i=0; i<test3.size(); i++){
        f4>>test3[i];
    }
    start = chrono::high_resolution_clock::now();
    quick_sort_3way(test3,0,test3.size()-1);
    stop = chrono::high_resolution_clock::now();
    time = stop - start;
    if(test_sort(test3)){
        fout<<time.count()<<"s\n";
    }
    else fout<<"failed sort\n";

    fout<<"n=1000 max=1000000000\n";
    for(int i=0; i<test1.size(); i++){
        f5>>test1[i];
    }
    start = chrono::high_resolution_clock::now();
    quick_sort_3way(test1,0,test1.size()-1);
    stop = chrono::high_resolution_clock::now();
    time = stop - start;
    if(test_sort(test1)){
        fout<<time.count()<<"s\n";
    }
    else fout<<"failed sort\n";
